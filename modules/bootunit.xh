BEGIN {xh::defmodule('bootunit.xh', <<'_')}
# This is a comment and should work properly.
# {
  This is a block comment and should also work.
}
#== 1 1

def foo bar
#== $@foo         bar
#== $@foo         {bar}
#== $@foo         (bar)
#== $@foo         [bar]
#== $foo          {{bar}}
#== $(echo $foo)  {{bar}}
#== $@(echo $foo) bar

def greet {
  echo hi there, $@_
}
#== $@(greet spencer)         {hi there, spencer}
#== $@(greet spencer tipping) {hi there, spencer tipping}

def newdef {
  # Define stuff within the calling scope; should be equivalent to using
  # def.
  echo $^(def $@_)
}
newdef x 5
#== $@x 5

def two-statements {
  def x 10
  echo $x
}
#== $@x 5
$'two-statements
#== $@x 10

#== $@[there echo/hi]              {hi there}
#== $@[spencer echo/there echo/hi] {hi there spencer}

def xs (foo bar bif baz)
#== $@(@ 0 $xs) foo
#== $@(@ 1 $xs) bar
#== $@(@ 2 $xs) bif
#== $@(@ 3 $xs) baz
#== $@(@ ^foo $xs) foo

#== $@[$xs @/0]   foo
#== $@[$xs @/-1]  baz
#== $@[$xs @/-2]  bif
#== $@[$xs @/:]   {{foo bar bif baz}}
#== $@[$xs @/1:]  {{bar bif baz}}
#== $@[$xs @/:1]  {{foo bar}}
#== $@[$xs @/:-2] {{foo bar bif}}
#== $@[$xs @/3:1] {{baz bif bar}}

#== $@[$xs @/^bar] bar
#== $@[$xs @/^bif] bif
#== $@[$xs @/^notfound] {}

#== $@[$xs @{0 2}]    {{foo bif}}
#== $@[$xs @{0 2:}]   {{foo {bif baz}}}
#== $@[$xs @{0 {2:}}] {{foo {{bif baz}}}}

def associative {
  foo bar
  bif baz
}
#== $@[$associative '/^foo] {{  foo bar}}
#== $@[$associative '/^foo @/1] bar
#== $@[$associative '/^bif @/1] baz
#== $@[$associative '/^bok] {}

#== $@[abcd "/0] 97
#== $@[abcd "/1:3] {{98 99 100}}

#== $@[/usr/bin/bash :(^/bin)] /bin
#== $@[../.. :/^..] ..

def #-> {echo #== \$@($@[$_ @/0]) $[$_ @/1]}
#-> {echo hi} hi
_
